#!/bin/bash
#
# @license   http://www.gnu.org/licenses/gpl.html GPL Version 3
# @author    Volker Theile <volker.theile@openmediavault.org>
# @author    OpenMediaVault Plugin Developers <plugins@omv-extras.org>
# @copyright Copyright (c) 2009-2015 Volker Theile
# @copyright Copyright (c) 2015-2017 OpenMediaVault Plugin Developers
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# Documentation/Howto:
# http://linux.die.net/man/8/cryptsetup
# http://linux.die.net/man/5/crypttab
# https://gitlab.com/cryptsetup/cryptsetup

set -x


### This script will generate default variables to be source by the decryption/unlock script by the plugin
. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

OMV_LUKS_CRYPTDISKS_DEFAULT=${OMV_LUKS_CRYPTDISKS_DEFAULT:-"/etc/default/cryptdisks"}
OMV_LUKS_CRYPTTAB_CONFIG=${OMV_LUKS_CRYPTTAB_CONFIG:-"/etc/crypttab"}
OMV_LUKS_DM="conf.service.luks"
OMV_LUKS_SCRIPT_DEFAULT="/etc/default/openmediavault-luksencryption"

luks_settings=$(omv-confdbadm read ${OMV_LUKS_DM})
keydevice_enable=$(echo "${luks_settings}" | jq -r '.|.enablekeydevice')
keydevice_encrypted=$(echo "${luks_settings}" | jq -r '.|.isencrypted')
keydevice_uuid=$(echo "${luks_settings}" | jq -r '.|.uuid')
keydevice_predictable=$(echo "${luks_settings}" | jq -r '.|.predictable')

if [ -f ${OMV_LUKS_SCRIPT_DEFAULT} ];then
	rm -f ${OMV_LUKS_SCRIPT_DEFAULT}
fi

_check_zfs () {
	fs_type_array=$( (omv-confdbadm read conf.system.filesystem.mountpoint | jq -r '.[]|.type' ) )
    for fs in ${fs_type_array[@]}; do
    	if [ "$fs" = "zfs" ];then
    		echo "ZFS=yes" >> ${OMV_LUKS_SCRIPT_DEFAULT}
    		break
    	fi
    done
}

case ${keydevice_enable} in 
	"true")
		echo "KEYDEVICE="yes"" >> ${OMV_LUKS_SCRIPT_DEFAULT}
		;;
	"false")
		echo "KEYDEVICE="no"" >> ${OMV_LUKS_SCRIPT_DEFAULT}
		;;
esac

case ${keydevice_encrypted} in 
	"true")
		echo "KEYDEVICE_ENCRYPTED="yes"" >> ${OMV_LUKS_SCRIPT_DEFAULT}
		;;
	"false")
		echo "KEYDEVICE_ENCRYPTED="no"" >> ${OMV_LUKS_SCRIPT_DEFAULT}
		;;
esac

echo "KEYDEVICE_DEV_PATH=${keydevice_predictable}" >> ${OMV_LUKS_SCRIPT_DEFAULT}
echo "KEYDEVICE_MNT_PATH=/mnt/keydevice_${keydevice_uuid}" >> ${OMV_LUKS_SCRIPT_DEFAULT}
echo "KEYDEVICE_UUID=${keydevice_uuid}" >> ${OMV_LUKS_SCRIPT_DEFAULT}
_check_zfs

# set +x



